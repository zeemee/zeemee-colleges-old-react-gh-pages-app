{"version":3,"sources":["components/CaseStudies.js","components/CollegePage.js","components/MoreInfoForm.js","components/Home.js","components/Partners.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["CaseStudies","props","state","error","isLoaded","items","url","process","fetch","then","res","json","result","setState","this","message","Container","Row","map","item","Col","Card","key","name","style","width","Img","variant","src","logo","Body","Title","Text","description","Button","href","Object","keys","Component","CollegePage","page","match","params","id","rowLogoStyle","backgroundColor","site_top_banner_color","height","textAlign","rowSpacerStyle","site_top_bar_color","rowBottomStyle","site_bottom_banner_color","fluid","alt","site_logo_source_url","xs","MoreInfoForm","value","success","handleChange","bind","handleSubmit","event","target","requestOptions","method","headers","body","JSON","stringify","alert","preventDefault","Form","onSubmit","Group","controlId","Label","Control","as","type","Home","Partners","partners","colleges","results","currentCols","forEach","index","push","lenght","valign","college","Menu","to","rel","path","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.9aa1d06d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nclass CaseStudies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    const url = `${process.env.REACT_APP_BASE_API_URL}/case_studies.json`;\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <Container>\n            <h1>Case Studies</h1>\n            <Row>\n              {items.map(item => (\n                <Col>\n                  <Card key={item.name} style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src={item.logo} />\n                    <Card.Body>\n                      <Card.Title>{item.name}</Card.Title>\n                      <Card.Text>{item.description}</Card.Text>\n                      <Button\n                        variant=\"primary\"\n                        href={item.url}>View Case Study</Button>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          </Container>\n          <hr/>\n          <h2>Data for debugging/dev</h2>\n          <ul>\n            {items.map(item => (\n              <li key={item.name}>\n                {item.name}\n                <ul>\n                  {Object.keys(item).map(key => (\n                    <li key={key}>\n                      {key}: {item[key]}\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default CaseStudies;\n","import React, { Component } from \"react\";\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nclass CollegePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      page: {}\n    };\n  }\n\n  componentDidMount() {\n    const url = `${process.env.REACT_APP_BASE_API_URL}/college_page.json?slug=${this.props.match.params.id}`;\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            page: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, page } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      // CSS crap - this is so lame\n      const rowLogoStyle = {\n        backgroundColor: page.site_top_banner_color,\n        // TODO: move this to some generalized CSS file\n        height: '200px',\n        textAlign: 'center'\n      };\n      const logoStyle = {\n      }\n      const rowSpacerStyle = {\n        backgroundColor: page.site_top_bar_color\n      }\n      const rowBodyStyle = {\n      }\n      const rowBottomStyle = {\n        backgroundColor: page.site_bottom_banner_color\n      }\n\n      /*\n       * more on layouts in bootstrap\n       * https://react-bootstrap.github.io/layout/grid/\n       */\n      return (\n        <div>\n        <Container fluid>\n          <Row style={rowLogoStyle}>\n            <Col>\n              <div style={logoStyle}>\n                <img alt={page.name} src={page.site_logo_source_url} />\n              </div>\n            </Col>\n          </Row>\n          <Row style={rowSpacerStyle}>\n            <Col>&nbsp;</Col>\n          </Row>\n          <Row style={rowBodyStyle}>\n            <Col>&nbsp;</Col>\n            <Col xs={6}>\n              <div>\n                <h2>CONGRATS!!</h2>\n                <p>You've been accepted to {page.name}! You now have access to\n          our private TODO:Class-of Group and other exclusive chats on ZeeMee\n          where you can: </p>\n                <ul>\n                  <li>Meet and chat with other accepted students</li>\n                  <li>Take the Roommate Match Quiz</li>\n                  <li>See daily life on campus from current students</li>\n                </ul>\n                <p>If you haven't already joined, just click the links below to\n          install the app.</p>\n              </div>\n            </Col>\n            <Col>&nbsp;</Col>\n          </Row>\n          <Row style={rowBottomStyle}>\n            <Col>&nbsp;</Col>\n          </Row>\n        </Container>\n        <hr/>\n        <h2>Data for debugging</h2>\n        <h1>College Page</h1>\n        <h2>{this.props.match.params.id}</h2>\n        <ul>\n          {Object.keys(page).map(key => (\n            <li key={key}>\n              {key}: {page[key]}\n            </li>\n          ))}\n        </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default CollegePage;\n","import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nclass MoreInfoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      error: null,\n      success: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    const url = `${process.env.REACT_APP_BASE_API_URL}/more_info.json`;\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ name: this.state.value })\n    };\n\n    fetch(url, requestOptions)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            success: true\n          });\n          alert(\"Thanks!\");\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            success: true,\n            error\n          });\n        }\n      )\n      //.then(response => response.json());\n      //.then(data => this.setState({ postId: data.id }));\n\n    //alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    // More on bootstrap forms\n    // https://react-bootstrap.github.io/components/forms/\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group controlId=\"moreInfoForm.ControlSelect1\">\n          <Form.Label>I would like to...</Form.Label>\n          <Form.Control as=\"select\">\n            <option>Select one...</option>\n            <option>schedule a personal ZeeMee demo for my team</option>\n            <option>join the weekly Wednesday \"open to all\" ZeeMee demo</option>\n            <option>receive a ZeeMee Info. Packer</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"moreInfoForm.ControlInput1\">\n          <Form.Label>What is your name?</Form.Label>\n          <Form.Control />\n        </Form.Group>\n        <Form.Group controlId=\"moreInfoForm.ControlInput2\">\n          <Form.Label>What is your <b>work</b> email address?</Form.Label>\n          <Form.Control type=\"email\"/>\n        </Form.Group>\n        <Form.Group controlId=\"moreInfoForm.ControlSelect2\">\n          <Form.Label>How did you first discover ZeeMee?</Form.Label>\n          <Form.Control as=\"select\">\n            <option>Select one...</option>\n            <option>at a conference</option>\n            <option>from an email</option>\n            <option>from social media</option>\n            <option>from a collegue</option>\n            <option>from a news story</option>\n            <option>from a ZeeMee website</option>\n            <option>other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default MoreInfoForm;\n","import React, { Component } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport MoreInfoForm from './MoreInfoForm';\n\nclass Home extends Component {\n  render() {\n    return (\n      <Container>\n        <h1>Home Page ZeeMee Colleges</h1>\n        <MoreInfoForm/>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nclass Partners extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      partners: [],\n      colleges: []\n    };\n  }\n\n  componentDidMount() {\n    const url = `${process.env.REACT_APP_BASE_API_URL}/partners.json`;\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            partners: result.items,\n            colleges: result.colleges\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, colleges, partners } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      var results = [], currentCols = [];\n      partners.forEach((item, index) => {\n        if (index % 6 === 0) {\n          if (index > 0) { results.push(<Row>{currentCols}</Row>) };\n          currentCols = [];\n        };\n        currentCols.push(\n          <Col>\n            <img alt={item.name} width=\"100px\" src={item.logo}/>\n          </Col>\n        );\n      });\n      if (currentCols.lenght > 0) { results.push(<Row>{currentCols}</Row>) };\n      return (\n        <Container>\n          <h1>Partners Page</h1>\n          <div>{results}</div>\n\n          <hr/>\n          <h2>Debug</h2>\n          <table>\n            <tbody>\n              <tr valign=\"top\">\n                <td>\n                  <h2>Partners</h2>\n                  <ul>\n                    {partners.map(item => (\n                      <li key={item.name}>\n                        {item.name}\n                      </li>\n                    ))}\n                  </ul>\n                </td>\n                <td>\n                  <h2>Colleges</h2>\n                  <ul>\n                    {colleges.map(college => (\n                      <li key={college}>\n                        {college}\n                      </li>\n                    ))}\n                  </ul>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default Partners;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport CaseStudies from './CaseStudies';\nimport CollegePage from './CollegePage';\nimport Home from './Home';\nimport Partners from './Partners';\n\nclass Menu extends Component {\n  render() {\n    return (\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/partners\">Partners</Link>\n            </li>\n            <li>\n              <Link to=\"/caseStudies\">Case Studies</Link>\n            </li>\n            <li>\n              <a target=\"_blank\" rel=\"noopener noreferrer\"\n                 href=\"https://www.zeemee.com/discover\">Discover Feed</a>\n            </li>\n            <li>\n              <a target=\"_blank\" rel=\"noopener noreferrer\"\n                 href=\"https://www.zeemee.com\">For Students</a>\n            </li>\n            <li>Get the App</li>\n            <li>Learn More</li>\n            <li>\n              <Link to=\"/plnu\">College Page: PLNU</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/partners\">\n            <Partners />\n          </Route>\n          <Route path=\"/caseStudies\">\n            <CaseStudies />\n          </Route>\n          <Route path=\"/:id\" component={CollegePage}/>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Menu;\n","import React from \"react\";\nimport Menu from './components/Menu';\n\nexport default function App() {\n  return (\n    <Menu />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}